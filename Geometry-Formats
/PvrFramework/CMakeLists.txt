cmake_minimum_required(VERSION 3.3)
project(framework)

add_subdirectory_if_exists(PVRCore PVRCore)
add_subdirectory_if_exists(PVRAssets PVRAssets)
add_subdirectory_if_exists(PVRShell PVRShell)
add_subdirectory_if_exists(PVRCamera PVRCamera)
add_subdirectory_if_exists(PVRUtilsGles PVRUtils/OpenGLES)

if(NOT APPLE)
	add_subdirectory_if_exists(PVRUtilsCL PVRUtils/OpenCL)
endif()

if(((${MOLTENVK_FOUND}) OR (NOT APPLE)) AND NOT CMAKE_SYSTEM_NAME MATCHES "QNX")
	add_subdirectory_if_exists(PVRUtilsVk PVRUtils/Vulkan)
	add_subdirectory_if_exists(PVRPfx PVRPfx)
	set(PVRVK_USE_PLATFORM "" CACHE INTERNAL "")
	if (WIN32)
		list(APPEND PVRVK_USE_PLATFORM "VK_USE_PLATFORM_WIN32_KHR")
	elseif(ANDROID)
		list(APPEND PVRVK_USE_PLATFORM "VK_USE_PLATFORM_ANDROID_KHR")
	elseif(APPLE)
		if (${MOLTENVK_FOUND})
			list(APPEND PVRVK_USE_PLATFORM "VK_USE_PLATFORM_MACOS_MVK")
		endif()	
	elseif(UNIX)
		if(PVR_WINDOW_SYSTEM)
			if (${PVR_WINDOW_SYSTEM} STREQUAL X11)
				list(APPEND PVRVK_USE_PLATFORM "VK_USE_PLATFORM_XLIB_KHR")
			elseif (${PVR_WINDOW_SYSTEM} STREQUAL XCB)
				list(APPEND PVRVK_USE_PLATFORM "VK_USE_PLATFORM_XCB_KHR")
			elseif (${PVR_WINDOW_SYSTEM} STREQUAL Wayland)
				list(APPEND PVRVK_USE_PLATFORM "VK_USE_PLATFORM_WAYLAND_KHR")
			endif()
		endif()
	endif()
	add_subdirectory_if_exists(PVRVk PVRVk)
endif()